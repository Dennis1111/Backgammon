html, body {
    height: 100%;
    margin: 0;
    background: grey;
}

:root {
    /* Define dice size relative to the board's width, adjust as necessary */
    --dice-size: 5vw;
}

.container {
    display: flex;
    gap: 2rem; /* Optional spacing between panel and board */
}

.game-panel {
    width: 50vw;
    min-width: 400px;
}

.game-container {
    flex-grow: 1;
    display: flex; /* Changed to flex to better control the layout */
    flex-direction: column; /* Stack children vertically */
    justify-content: flex-start; /* Center children vertically */
    align-items: center; /* Center children horizontally */
    height: 100%; /* Take full height of the viewport */
    /*border: 2px solid;*/
    width: 100%;
    max-width: 100%;
}

.board {
    position: relative;
    margin-top: 5px;
    width: 45vw;
    background: green;
    display: flex;
    flex-wrap: wrap;
    padding: 10px;
    box-sizing: border-box;
}

.game-over-message {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
    background-color: rgba(0, 0, 0, 0.8); /* semi-transparent black */
    color: white;
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    text-align: center;
    min-width: 200px;
}

.game-over-message button {
    margin-top: 1rem;
}

.complete-move-button {
    position: absolute;
    top: 50%;
    left: 50%;
    border-radius: 5px;
    transform: translate(-50%, -50%);
    z-index: 10;
}



.game-controls {
    text-align: center; /* Center-align controls */
}

.bear-off {
    flex: 0 0 8%; /* Or another appropriate width */
    display: flex;
    flex-direction: column; /* Stack checkers vertically */
    justify-content: flex-start; /* Start from the top for the top bear-off */
    height: 100%; /* Height as per the board */
    background: green; /* Distinct color for the bear-off area */
    box-sizing: border-box;
    padding: 10px 5px; /* Adjust padding */
    position: relative; /* Positioning context for absolute checker positioning */
    border: 2px solid #000; /* Border for clarity */
}

.bear-off-bottom {
    justify-content: flex-end; /* Start from the bottom for the bottom bear-off */
}

.bear-off-checker {
    position: absolute; /* Position checkers absolutely within their parent bear-off */
    width: 40px; /* Adjusted width for standing appearance */
    height: 10px; /* Reduced height to simulate standing on edge */
    margin: 1px 0; /* Space between checkers */
    border-radius: 5px; /* Soften the edges for a more realistic look */
    transform: rotate(0deg); /* Optional: rotate if you want them to appear horizontally */
}

/* Color classes for checkers */
.checker.white, .bear-off-checker.white {
    background-color: #fff; /* White checkers */
}

.checker.black, .bear-off-checker.black {
    background-color: #000; /* Black checkers */
}

.upper-half, .lower-half {
    display: flex;
    width: 100%;
}

.bar {
    width: 8%; /* Adjust based on your design */
    background: Green; /* Bar color */
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid black;
}

.point {
    flex:1;
    /*width: 1;*/
    background: Green;
    padding-bottom: 46.875%;
    position: relative;
}
.point.dark::before {
    background-color: Red; /* Dark triangles */
}
.point.light::before {
    background-color: White; /* Light triangles */
    /* background: #f4a460;*/
}

.point::before {
    content: " "; /* Ensure there's a space between quotes */
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    clip-path: polygon(10% 0%, 90% 0%, 50% 90%);
}

.lower-half .point::before {
    clip-path: polygon(50% 10%, 10% 100%, 90% 100%);
}

.checker {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid #000;
    position: absolute;
    bottom: 10px;
    left: 50%; /* Center horizontally */
    transform: translateX(-50%); /* Offset by half of its own width to truly center */
}

.checker.player1 {
    background: #fff;
}
.checker.player2 {
    background: #000;
}

.dice-grid {
    width: 2vw; /* Adjust this to make the dice size relative to viewport */
    height: 2vw; /* Same for height */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 4px;
    background-color: #fff;
    border: 2px solid #000;
    border-radius: 8px;
    padding: 6px;
}

.dice-dot {
    width: 90%;
    height: 90%;
    background-color: black;
    border-radius: 70%;
    place-self: center;
}

/* Specific positioning for each dice face */
.dice-grid[data-value="1"] .dice-dot:nth-child(5) {
    place-self: center;
}

.dice-grid[data-value="2"] .dice-dot:nth-child(2),
.dice-grid[data-value="2"] .dice-dot:nth-child(8) {
    place-self: center;
}

.dice-grid[data-value="3"] .dice-dot:nth-child(1),
.dice-grid[data-value="3"] .dice-dot:nth-child(5),
.dice-grid[data-value="3"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="4"] .dice-dot:nth-child(1),
.dice-grid[data-value="4"] .dice-dot:nth-child(3),
.dice-grid[data-value="4"] .dice-dot:nth-child(7),
.dice-grid[data-value="4"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="5"] .dice-dot:nth-child(1),
.dice-grid[data-value="5"] .dice-dot:nth-child(3),
.dice-grid[data-value="5"] .dice-dot:nth-child(5),
.dice-grid[data-value="5"] .dice-dot:nth-child(7),
.dice-grid[data-value="5"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="6"] .dice-dot:nth-child(1),
.dice-grid[data-value="6"] .dice-dot:nth-child(3),
.dice-grid[data-value="6"] .dice-dot:nth-child(4),
.dice-grid[data-value="6"] .dice-dot:nth-child(6),
.dice-grid[data-value="6"] .dice-dot:nth-child(7),
.dice-grid[data-value="6"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-container {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    gap: 10px;
    z-index: 10;
}

.dice {
    background: none;
    border: none;
    font-size: 50px;
    line-height: 1;
    display: block;
}

.dice-player1 {
    background-color: none; /* Example color for player 1 */
}

.dice-player2 {
    background-color: none; /* Color for player 2's dice */
}

.hidden {
    display: none;
}

.move-table-wrapper {
    max-height: 50vh;
    overflow-y: auto;
}

.move-table {
    width: 100%;
    border-collapse: collapse;
    font-family: sans-serif;
    font-size: 0.9rem;
}

.move-table thead th {
    position: sticky;
    top: 0;
    background-color: #f2f2f2;
    z-index: 1;
}

.move-table th,
.move-table td {
    border: 1px solid #ccc;
    padding: 8px 10px;
    text-align: left;
    word-break: break-word;
}

.instructions-container {
    background-color: #f8f9fa; /* Light grey */
    color: #111;
    padding: 2rem;
    max-width: 700px;
    margin: 2rem auto;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
    font-family: sans-serif;
}
