.board {
    display: grid;
    grid-template-columns: repeat(14, 1fr); /* 12 points + 2 bars */
    grid-template-rows: repeat(2, 1fr); /* Upper and lower halves */
    gap: 5px;
    width: 100%;
    height: auto;
    aspect-ratio: 2 / 1; /* Maintain board aspect ratio */
    position: relative;
    background-color: #f5deb3; /* Light tan for the board */
    border: 2px solid #8b4513; /* Dark brown border */
}

.point {
    position: relative;
    display: flex;
    flex-direction: column-reverse; 
    justify-content: flex-start;
    align-items: center;
    height: 100%;
    width: 100%;
    border: 1px solid #8b4513; 
}

.point.dark::before {
    background-color: red; 
}

.point.light::before {
    background-color: white; 
}

.point::before {
    content: " ";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    clip-path: polygon(10% 0%, 90% 0%, 50% 90%);
}

.lower-half .point::before {
    clip-path: polygon(50% 10%, 10% 100%, 90% 100%);
}

.checker {
    width: 80%; /* Checker size relative to the point */
    height: auto;
    aspect-ratio: 1 / 1; /* Make checkers circular */
    border-radius: 50%;
    margin-bottom: 2px; /* Space between stacked checkers */
    background-color: var(--checker-color);
}

.bear-off-checker {
    position: absolute; /* Position checkers absolutely within their parent bear-off */
    width: 40px; /* Adjusted width for standing appearance */
    height: 10px; /* Reduced height to simulate standing on edge */
    margin: 1px 0; /* Space between checkers */
    border-radius: 5px; /* Soften the edges for a more realistic look */
    transform: rotate(0deg); /* Optional: rotate if you want them to appear horizontally */
    background-color: var(--checker-color);
}

.checker.white {
    background-color: white;
    border: 1px solid black;
}

.checker.black {
    background-color: black;
    border: 1px solid white;
}

.bear-off {
    flex: 0 0 8%; /* Or another appropriate width */
    display: flex;
    flex-direction: column; /* Stack checkers vertically */
    justify-content: flex-start; /* Start from the top for the top bear-off */
    height: 100%; /* Height as per the board */
    background: #a52a2a; /* Distinct color for the bear-off area */
    box-sizing: border-box;
    padding: 10px 5px; /* Adjust padding */
    position: relative; /* Positioning context for absolute checker positioning */
    border: 2px solid #000; /* Border for clarity */
}

.bear-off-bottom {
    justify-content: flex-end; /* Start from the bottom for the bottom bear-off */
}

.bar {
    width: 8%; /* Adjust based on your design */
    background: green; /* Bar color */
    display: flex;
    justify-content: center;
    align-items: center;
    border: 2px solid black;
}

.upper-half, .lower-half {
    display: flex;
    width: 100%;
}

.checker.player1 {
    background: #fff;
}
.checker.player2 {
    background: #000;
}

.dice-grid {
    width: 2vw; /* Adjust this to make the dice size relative to viewport */
    height: 2vw; /* Same for height */
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    gap: 4px;
    background-color: #fff;
    border: 2px solid #000;
    border-radius: 8px;
    padding: 6px;
}

.dice-dot {
    width: 90%;
    height: 90%;
    background-color: black;
    border-radius: 70%;
    place-self: center;
}

/* Specific positioning for each dice face */
.dice-grid[data-value="1"] .dice-dot:nth-child(5) {
    place-self: center;
}

.dice-grid[data-value="2"] .dice-dot:nth-child(2),
.dice-grid[data-value="2"] .dice-dot:nth-child(8) {
    place-self: center;
}

.dice-grid[data-value="3"] .dice-dot:nth-child(1),
.dice-grid[data-value="3"] .dice-dot:nth-child(5),
.dice-grid[data-value="3"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="4"] .dice-dot:nth-child(1),
.dice-grid[data-value="4"] .dice-dot:nth-child(3),
.dice-grid[data-value="4"] .dice-dot:nth-child(7),
.dice-grid[data-value="4"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="5"] .dice-dot:nth-child(1),
.dice-grid[data-value="5"] .dice-dot:nth-child(3),
.dice-grid[data-value="5"] .dice-dot:nth-child(5),
.dice-grid[data-value="5"] .dice-dot:nth-child(7),
.dice-grid[data-value="5"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-grid[data-value="6"] .dice-dot:nth-child(1),
.dice-grid[data-value="6"] .dice-dot:nth-child(3),
.dice-grid[data-value="6"] .dice-dot:nth-child(4),
.dice-grid[data-value="6"] .dice-dot:nth-child(6),
.dice-grid[data-value="6"] .dice-dot:nth-child(7),
.dice-grid[data-value="6"] .dice-dot:nth-child(9) {
    place-self: center;
}

.dice-container {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    gap: 10px;
    z-index: 10;
}

.dice {
    background: none;
    border: none;
    font-size: 50px;
    line-height: 1;
    display: block;
}

.dice-player1 {
    background-color: none; /* Example color for player 1 */
}

.dice-player2 {
    background-color: none; /* Color for player 2's dice */
}

.greyed-out {
    opacity: 0.4;
    cursor: pointer;
}


.hidden {
    display: none;
}

.move-table {
    width: 100%;
    max-height: 40vh;
    overflow-y: auto;
    display: block;
    border-collapse: collapse;
    font-family: sans-serif;
    font-size: 0.9rem;
}

.move-table thead {
    position: sticky;
    top: 0;
    background-color: #f2f2f2;
}

.move-table th, .move-table td {
    border: 1px solid #ccc;
    padding: 8px 10px;
    text-align: left;
    word-break: break-word; /* Ensure long move notation wraps */
}

.move-table tbody {
    display: block;
    max-height: 30vh;
    overflow-y: auto;
}

.move-table tr {
    display: table;
    width: 100%;
    table-layout: fixed;
}
